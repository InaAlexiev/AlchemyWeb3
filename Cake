// SPDX-License-Identifier: MIT
pragma solidity ^0.8.4;

import "@openzeppelin/contracts/token/ERC721/ERC721.sol";
import "@openzeppelin/contracts/access/Ownable.sol";

contract Cake is ERC721, Ownable {
 
    uint256 public maxSupply;
    uint256 public totalSupply;
    mapping(address => uint256) public mintedWallets;
    constructor() ERC721("Cake", "CAKE") {
        maxSupply=10;
    }

    function setMaxSupply(uint maxSupply_) external onlyOwner{
        maxSupply== maxSupply_;
    }

    function mint() external payable  {
       
    require( mintedWallets[msg.sender]<5, "exceeds max per wallet");
    require(maxSupply>totalSupply,"sold out");
       mintedWallets[msg.sender]++;
       totalSupply++;
       uint256 tokenId= totalSupply;
        _safeMint(msg.sender, tokenId);
    
        
    }
